name: Build Binaries

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            cross: false
          - os: macos-latest
            target: x86_64-apple-darwin
            cross: false
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            cross: true

    steps:
      - uses: actions/checkout@v4

      # Install Rust and required targets
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      # Install dependencies
      - name: Install dependencies (Linux or Windows Cross)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            pkg-config \
            git \
            yasm \
            mingw-w64 \
            meson \
            ninja-build

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install yasm pkg-config meson ninja

      # Cache FFmpeg build
      - name: Cache FFmpeg
        uses: actions/cache@v4
        with:
          path: target/ffmpeg-cache
          key: ffmpeg-${{ matrix.target }}-${{ hashFiles('scripts/build_ffmpeg_minimal.sh') }}
          restore-keys: |
            ffmpeg-${{ matrix.target }}-

      - name: Prepare cache dir
        run: mkdir -p target/ffmpeg-cache

      - name: Build
        env:
          CARGO_TARGET_X86_64_PC_WINDOWS_GNU_LINKER: x86_64-w64-mingw32-gcc
          PKG_CONFIG_ALLOW_CROSS: 1
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: myapp-${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/your_app_name
            target/${{ matrix.target }}/release/your_app_name.exe
